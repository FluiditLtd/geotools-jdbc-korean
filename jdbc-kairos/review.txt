Kairos Spatial
=============================

* 데이터베이스 생성
createdb databaseName [-s initialDBSize] [-g growingDBSize] [-f DBFileSize] [-i indexLogging] [/y]
createdb test -s 250 -g 50

dropdb databaseName [/y]

* System Table
CREATE TABLE SPATIAL_REF_SYS (
    SRID        INTEGER NOT NULL PRIMARY KEY,
    AUTH_NAME   VARCHAR(256),
    AUTH_SRID   INTEGER,
    SRTEXT      VARCHAR(2048),
    PROJ4TEXT   VARCHAR (2048)
);

CREATE TABLE GEOMETRY_COLUMNS
(
  F_TABLE_CATALOG VARCHAR(256) NOT NULL,
  F_TABLE_SCHEMA VARCHAR(256) NOT NULL,
  F_TABLE_NAME VARCHAR(256) NOT NULL,
  F_GEOMETRY_COLUMN VARCHAR(256) NOT NULL,
  COORD_DIMENSION INTEGER NOT NULL,
  SRID INTEGER NOT NULL,
  F_GEOMETRY_TYPE VARCHAR(30) NOT NULL,
  CONSTRAINT geometry_columns_pk PRIMARY KEY (F_TABLE_CATALOG, F_TABLE_SCHEMA, F_TABLE_NAME, F_GEOMETRY_COLUMN)
);

CREATE [UNIQUE] [TTREE] INDEX IndexName ON TableName (ColumnName[,ColumnName]??

* JDBC 연결
Class.forName("kr.co.realtimetech.kairos.jdbc.kairosDriver");
Connection con = DriverManager.getConnection("jdbc:kairos://localhost:5000/test", "root", "root");
st = con.createStatement();

* 연결 예제
kairosDataSource kds = new kairosDataSource();
kds.setDescription("description");
kds.setDatabaseName("test");
kds.setPortNumber(5000);
kds.setServerName("192.168.1.1");
kds.setUser("root");
kds.setPassword("root");
kds.setCharacterSet("SJIS");
Connection con = kds.getConnection();
con.close();

# Java Types Mapped to Kairos Types
Kairos Type Java Type Java Object Type
BYTE byte java.lang.Byte
CHAR String java.lang.String
VARCHAR String java.lang.String
VARBYTE byte[] java.io. ByteArrayInputStream
SMALLINT short java.lang.Short
INTEGER int java.lang.Integer
FLOAT float java.lang.Float
DOUBLE double java.lang.Double
TINYINT byte,boolen java.lang.Byte
NUMBER java.math.BigDecimal java.math.BigDecimal
DATE java.sql.Date java.sql.Date
TIME java.sql.Time java.sql.Time
TIMESTAMP java.sql.Timestamp java.sql.Timestamp
