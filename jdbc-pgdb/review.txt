/*
 *    GeoTools - The Open Source Java GIS Toolkit
 *    http://geotools.org
 *
 *    (C) 2002-2012, Open Source Geospatial Foundation (OSGeo)
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */

Histroy
========
author : MapPlus, mapplus@gmail.com, http://onspatial.com
since  : 2012-10-30


Compatibility
==============
 - GeoTools 2.7.x
 - GeoTools 8.x
 - 모두 지원

Overview
=========

ESRI Personal Geodatabase (PGDB) is an MS Access database (.mdb) file with some predefined tables and table structures. 
A PGDB can store multiple vector and raster layers with attributes, upto a total size of 2 GiB.


Constraints
===========

 #. ESRI Personal Geodatabase (PGDB) 전용 DataStore입니다.
 #. 이 드라이브는 데이터 변환을 위한 용도로만 활용할 수 있습니다.
 #. 읽기 전용이며 FeatureClass(Point, MultiPoint, Line, Polygon)만 지원합니다.
 #. Filter를 이용한 쿼리 미적용
 #. SimpleFeatureSource로 얻을 수 있는 정보는 다음과 같습니다.
   - getSchema()
   - getBounds()
   - getCount(Query.ALL)
   
 #. 예제 코드
    String gdbFile = "C:/Project_Document/ESRI_PGDB.mdb";
    
    Map<String, Serializable> params = new HashMap<String, Serializable>();
    
    // 1
    params.put(PGDBDataStoreFactory.PARAM_FILE.key, DataUtilities.fileToURL(new File(gdbFile)));
    params.put(PGDBDataStoreFactory.PARAM_USER.key, "");
    params.put(PGDBDataStoreFactory.PARAM_PASSWD.key, "");
    
    // or 2
    params.put("url", DataUtilities.fileToURL(new File(gdbFile)));
    params.put("user", "");
    params.put("password", "");
    
    // 1
    PGDBDataStoreFactory factory = new PGDBDataStoreFactory();
    DataStore dataStore = factory.createDataStore(params);
    
    // or 2
    dataStore = DataStoreFinder.getDataStore(params);
    
    
    List<Name> typeNames = dataStore.getNames();
    for (Name typeName : typeNames) {
        SimpleFeatureSource sfs = dataStore.getFeatureSource(typeName);
        // do something
    }
